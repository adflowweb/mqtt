<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.adflow.pms.domain.mapper.TokenMapper">

	<resultMap id="TokenResult" type="kr.co.adflow.pms.domain.Token">
		<result property="userId" column="user_id" />
		<result property="tokenId" column="token_id" />
		<result property="tokenType" column="token_type" />
		<result property="issueTime" column="issue_time" />
		<result property="issueId" column="issue_id" />
		<result property="expiredTime" column="expired_time" />
		<result property="apiCode" column="api_code" />
		<result property="deviceId" column="device_id" />
		<result property="serverId" column="server_id" />

	</resultMap>

	<select id="getLatest" parameterType="kr.co.adflow.pms.domain.Token"
		resultMap="TokenResult">
		SELECT token_id, user_id
		FROM token
		WHERE user_id= #{userId}
		AND device_id=#{deviceId}
		order by issue_time desc
		limit 1
	</select>


	<select id="getLatestByUserId" parameterType="kr.co.adflow.pms.domain.Token"
		resultMap="TokenResult">
		SELECT token_id, user_id
		FROM token
		WHERE user_id= #{userId}
		order by issue_time desc
		limit 1
	</select>


	<select id="selectToken" parameterType="String" resultMap="TokenResult">
		SELECT user_id
		, token_id
		, issue_time
		,
		issue_id
		FROM pms.token a
		WHERE
		a.token_id = #{tokenId}
	</select>

	<select id="selectUserInfo" parameterType="String" resultMap="TokenResult">
		SELECT
		token_id
		, device_id

		FROM pms.token a
		WHERE
		a.user_id = #{userId}
	</select>


	<select id="selectUserid" parameterType="String" resultMap="TokenResult">
		SELECT user_id
		FROM pms.token a
		WHERE
		a.token_id=#{tokneId};


	</select>


	<select id="selectTokenInfo" parameterType="String" resultMap="TokenResult">
		SELECT user_id,device_id,issue_time
		FROM pms.token a
		WHERE
		a.token_id=#{tokneId};


	</select>



	<select id="getApiCode" parameterType="String" resultMap="TokenResult">

		SELECT
		api_code FROM pms.role WHERE group_code= (SELECT group_code FROM
		pms.user where user_id=#{userId});
	</select>



	<insert id="insertToken" parameterType="kr.co.adflow.pms.domain.Token">
		INSERT INTO pms.token
		(user_id
		,token_id
		,device_id
		,issue_time
		,issue_id
		,last_access_time
		)
		values(
		#{userId}
		,#{tokenId}
		,#{deviceId}
		,now()
		,#{issueId}
		,now()

		)
	</insert>

	<delete id="deleteUserToken" parameterType="String">
		DELETE FROM pms.token
		WHERE user_id = #{userId}
	</delete>

	<delete id="deleteExpiredToken" parameterType="String">
		DELETE FROM pms.token
		WHERE user_id = #{userId}
		AND expired_time IS NOT
		NULL
		AND expired_time <![CDATA[<]]>
		now()
	</delete>

	<update id="updateTokenExpiredTime" parameterType="kr.co.adflow.pms.domain.Token">
		UPDATE
		pms.token
		SET expired_time = #{expiredTime}
		WHERE token_id = #{tokenId}
	</update>

	<select id="selectApplicationKey" parameterType="String"
		resultType="String">
		SELECT token_id
		FROM pms.token
		WHERE
		token_type = 'A'
		AND
		user_id = #{userId}
	</select>

	<select id="checkToken" parameterType="String" resultType="boolean">
		SELECT CASE WHEN count(*) > 0
		THEN TRUE ELSE FALSE END AS result
		FROM
		pms.token
		WHERE token_id = #{token}
	</select>

</mapper>	