#for subscribe topic list
topic=${topic}

mq.server.ssl=${mq.server.ssl}

# ibm mq server url
mq.server.url=${mq.server.url}
#mq.server.url=tcp://adflow.net:1883
#mq.server.url=ssl://adflow.net:8883

# SMS server url 
sms.server.url=${sms.server.url}
# SMS server port
sms.server.port=${sms.server.port}

ldap.server.enable=${ldap.server.enable}
ldap.server.url=${ldap.server.url}

apns.key.file=${apns.key.file}

apns.key.password=${apns.key.password}

apns.production=${apns.production}

ha.enable=true
#second 
ha.check.interval=60
#minute
ha.takeover.interval=3

#unique client id
#clientid=devServer3 // if not, generate id 

#healthCheck enable/disable
health.enable=${health.enable}

#healthCheck interval (second) 
health.check.interval=${health.check.interval}

#messageProcess enable/disable
message.enable=${message.enable}

#messageProcess interval (second) 
message.process.interval=${message.process.interval}

#SMS process enable/disable
sms.enable=${sms.enable}

# SMS processing interval (second) 
sms.process.interval=${sms.process.interval}

# SMS sending channel processing interval (second) 
sendChannel.process.interval=${sendChannel.process.interval}

# SMS (second) 
#recvChannel.process.interval=60

# mqtt client socket timeout „(second)  
connection.timeout=${connection.timeout}

# mqtt session keep alive interval (second) 
keep.alive.interval=${keep.alive.interval}

# mqtt session clean 
clean.session=${clean.session}

# paho logging level 
paho.log.level=${paho.log.level}