<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.adflow.push.mapper.MessageMapper">
	<select id="get" parameterType="int"
		resultType="kr.co.adflow.push.domain.Message">
		SELECT * FROM message a, content b WHERE a.id = b.id
		and
		a.id = #{id}
	</select>

	<resultMap id="MessageResult" type="kr.co.adflow.push.domain.Message">
		<result property="id" column="id" />
		<result property="sender" column="sender" />
		<result property="receiver" column="receiver" />
		<result property="issue" column="issue" />
		<result property="issueSms" column="issueSms" />
		<result property="qos" column="qos" />
		<result property="retained" column="retained" />
		<result property="sms" column="sms" />
		<result property="sender" column="sender" />
		<result property="timeOut" column="timeOut" />
		<result property="type" column="type" />
		<result property="content" column="content" />
		<result property="contentType" column="contenttype" />
		<result property="status" column="status" />
		<result property="serviceID" column="serviceID" />
	</resultMap>

	<select id="getUndeliveredMsgs" resultMap="MessageResult">
		select * from message where issue is null and status = 0 limit 1000
		<!-- and reservation is not null -->
	</select>

	<select id="getUndeliveredSmsMsgs" resultMap="MessageResult">
		select * from message
		where status = 1 and sms = 1 and issue is not
		null and issueSms is null
		<!-- and reservation is not null -->
	</select>

	<select id="getDeliveredMsgs" resultMap="MessageResult">
	<![CDATA[
		SELECT 
		   type, id, sender, receiver, issue, issueSms, sms, timeout, qos, retained, reservation,  status, serviceID
		FROM
		    message
		WHERE
		    issue IS NOT NULL AND type IN ( 102,104,105)
		ORDER BY issue DESC
		LIMIT 1000
		]]>
		<!-- and reservation is not null -->
	</select>

	<select id="getReservationMsgs" resultMap="MessageResult">
		select * from message a, content b where a.id = b.id and reservation
		is not null and issue is null
		<!-- and reservation is not null -->
	</select>



	<!-- <select id="getID" resultType="java.lang.Integer" parameterType="kr.co.adflow.push.domain.Message"> 
		SELECT id FROM message WHERE sender= #{sender} and receiver= #{receiver} 
		and insertDate = #{insertDate} // order by id desc limit 1 </select> -->


	<insert id="postMsg" parameterType="kr.co.adflow.push.domain.Message">
		INSERT INTO
		message (sender, receiver, sms, timeOut, qos, retained,
		reservation, type, status, serviceID,issue) values(
		#{sender},
		#{receiver},
		#{sms},
		#{timeOut},
		#{qos},
		#{retained}, #{reservation},
		#{type},
		#{status},
		#{serviceID},
		#{issue}
		)
		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="putMsg" parameterType="kr.co.adflow.push.domain.Message">
		UPDATE message set
		issueSms =
		#{issueSms}, sender = #{sender}, receiver = #{receiver}, sms = #{sms},
		timeOut = #{timeOut}, qos = #{qos}, retained = #{retained},
		reservation =
		#{reservation}, type = #{type}, status = #{status} ,
		serviceID = #{serviceID} where
		id = #{id}
	</update>

	<update id="putIssue" parameterType="kr.co.adflow.push.domain.Message">
		UPDATE message set issue =
		#{issue}, status = #{status} where id = #{id}
	</update>

	<update id="putIssueSms" parameterType="kr.co.adflow.push.domain.Message">
		UPDATE message set
		issueSms = #{issueSms}, status = #{status} where id = #{id}
	</update>

	<update id="putStatus" parameterType="kr.co.adflow.push.domain.Message">
		UPDATE message set
		status =
		#{status} where id = #{id}
	</update>

	<insert id="putContent" parameterType="kr.co.adflow.push.domain.Message">
		UPDATE content set content
		= #{content}, contenttype = #{contentType}
		where id = #{id}
	</insert>

	<insert id="postContent" parameterType="kr.co.adflow.push.domain.Message">
		INSERT INTO
		content
		values(
		#{id}, #{content}, #{contentType}
		)
	</insert>

	<insert id="postAck" parameterType="kr.co.adflow.push.domain.Acknowledge">
		INSERT INTO
		ack
		values(
		#{id},
		#{userID}, #{deviceID}
		)
	</insert>

	<select id="getAck" parameterType="kr.co.adflow.push.domain.Acknowledge"
		resultType="boolean">
		SELECT CASE WHEN count(*) > 0
		THEN 1 ELSE 0 END From ack
		where userid = #{userID} and id = #{id}
	</select>

	<resultMap id="AckResult" type="kr.co.adflow.push.domain.Acknowledge">
		<result property="id" column="id" />
		<result property="userID" column="userid" />
		<result property="deviceID" column="deviceid" />
	</resultMap>

	<select id="getAckAll" parameterType="java.lang.Integer"
		resultMap="AckResult">
		SELECT * From ack where id =
		#{id}
	</select>

	<delete id="deleteMsg" parameterType="java.lang.Integer">
		DELETE from
		message
		WHERE
		id=#{id}
	</delete>

	<select id="getSms" parameterType="kr.co.adflow.push.domain.Sms"
		resultType="boolean">
		SELECT CASE WHEN count(*) > 0
		THEN 1 ELSE 0 END From sms
		where userid = #{userID} and id = #{id}
	</select>

	<insert id="postSms" parameterType="kr.co.adflow.push.domain.Sms">
		INSERT INTO
		sms
		values(
		#{id},
		#{userID}, #{issue}, #{status}
		)
	</insert>
</mapper>	